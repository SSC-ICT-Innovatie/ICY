// Mocks generated by Mockito 5.4.5 from annotations
// in icy/test/notifications/notifications_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:icy/features/notifications/models/notification_model.dart'
    as _i4;
import 'package:icy/features/notifications/repository/notifications_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NotificationsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationsRepository extends _i1.Mock
    implements _i2.NotificationsRepository {
  MockNotificationsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.NotificationModel>> getNotifications() =>
      (super.noSuchMethod(
            Invocation.method(#getNotifications, []),
            returnValue: _i3.Future<List<_i4.NotificationModel>>.value(
              <_i4.NotificationModel>[],
            ),
          )
          as _i3.Future<List<_i4.NotificationModel>>);

  @override
  _i3.Future<List<_i4.NotificationModel>> getNotificationsForUser() =>
      (super.noSuchMethod(
            Invocation.method(#getNotificationsForUser, []),
            returnValue: _i3.Future<List<_i4.NotificationModel>>.value(
              <_i4.NotificationModel>[],
            ),
          )
          as _i3.Future<List<_i4.NotificationModel>>);

  @override
  _i3.Future<bool> markAsRead(String? notificationId) =>
      (super.noSuchMethod(
            Invocation.method(#markAsRead, [notificationId]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> markNotificationAsRead(String? notificationId) =>
      (super.noSuchMethod(
            Invocation.method(#markNotificationAsRead, [notificationId]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> markAllAsRead() =>
      (super.noSuchMethod(
            Invocation.method(#markAllAsRead, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> deleteNotification(String? notificationId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteNotification, [notificationId]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> clearAllNotifications() =>
      (super.noSuchMethod(
            Invocation.method(#clearAllNotifications, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<int> getUnreadCount() =>
      (super.noSuchMethod(
            Invocation.method(#getUnreadCount, []),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);
}
